#+TITLE: Spacemacs Configuration
#+AUTHOR: Zhe Li
#+EMAIL: linucity.jn@gmail.com
#+STARTUP: content
* General
** Personal
#+begin_src emacs-lisp :results none
  (setq user-full-name "Zhe Li"
    user-mail-address "linuxcity.jn@gmail.com")
#+end_src
** Convenience
   #+begin_src emacs-lisp :results none
     (setq confirm-kill-emacs 'y-or-n-p)
     (setq mac-emulate-three-button-mouse t)
   #+end_src

* UI/Visual
** Frame Size
   #+begin_src emacs-lisp :results none
     (if (eq system-type 'darwin)
         (add-to-list 'default-frame-alist
                      '(height . 60))
       (add-to-list 'default-frame-alist
                    '(width . 134)))
   #+end_src
** Whitespace
   #+begin_src emacs-lisp :results none
     (setq whitespace-display-mappings
           ;; all numbers are Unicode codepoint in decimal. ⁖ (insert-char 182 1)
           '((tab-mark 9 [183 9] [255 9]))) ; 9 TAB, 9655 WHITE RIGHT-POINTING TRIANGLE 「▷」

     (global-whitespace-mode 1)
     (setq fill-column 120)
     (setq whitespace-line-column 260)

     (setq-default
      tab-width 2
      indent-tabs-mode nil
      fci-rule-column 120)
   #+end_src
** Natural Title bar
   #+begin_src emacs-lisp :results none
     (add-to-list 'default-frame-alist
                  '(ns-transparent-titlebar . t))
     (add-to-list 'default-frame-alist
                  '(ns-appearance . dark))
   #+end_src

* Modes
** Org
*** Basic setup
    #+begin_src emacs-lisp :results none
    ;; first day of a week is Monday
    (setq calendar-week-start-day 1)

    #+end_src

* Functions
** Utils
#+begin_src emacs-lisp :results none
  (defun zl/insert-today ()
    (interactive)
    (insert (shell-command-to-string "/bin/date \"+%Y-%m-%d\"")))

#+end_src

** External Applications
#+begin_src emacs-lisp :results none
  (defun zl/get-column ()
    (number-to-string (+ (current-column) 1)))

  (defun zl/get-line-number ()
    (number-to-string (line-number-at-pos)))

  (defun zl/open-with-line (app)
    (when buffer-file-name
      (save-buffer)
      (shell-command (concat app " \"" buffer-file-name ":" (zl/get-line-number) "\""))))

  (defun zl/open-with-line-column (app)
    (when buffer-file-name
      (save-buffer)
      (shell-command (concat app " \"" buffer-file-name ":" (zl/get-line-number) ":" (zl/get-column) "\""))))

  (defun zl/open-with-vscode ()
    (interactive)
    (zl/open-with-line-column "/usr/local/bin/code --goto"))

#+end_src
