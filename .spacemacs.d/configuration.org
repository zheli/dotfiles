#+TITLE: Spacemacs Configuration
#+AUTHOR: Zhe Li
#+EMAIL: linucity.jn@gmail.com
#+STARTUP: content
* General
** Personal
#+begin_src emacs-lisp :results none
  (setq user-full-name "Zhe Li"
    user-mail-address "linuxcity.jn@gmail.com")
#+end_src
** Convenience
   #+begin_src emacs-lisp :results none
     (setq confirm-kill-emacs 'y-or-n-p)
     (setq mac-emulate-three-button-mouse t)
     (spacemacs/toggle-indent-guide-globally-on)
   #+end_src

* UI/Visual
#+begin_src emacs-lisp :results none
(spacemacs/toggle-syntax-checking-on)
(spacemacs/toggle-smartparens-globally-on)
(global-prettify-symbols-mode 1)
#+End_src
** Transparent background
#+begin_src emacs-lisp :results none
(spacemacs/toggle-transparency)
#+end_src
** Frame Size
   #+begin_src emacs-lisp :results none
          (if (eq system-type 'darwin)
              (progn ; Lets you evaluate more than one sexp for the true case
                (add-to-list 'default-frame-alist '(height . 120))
                (add-to-list 'default-frame-alist '(width . 120))))
   #+end_src
** Ignore certain files in helm
#+begin_src emacs-lisp :results none
(setq helm-ff-skip-boring-files t)
(push "\\.DS_Store$" helm-boring-file-regexp-list)
#+end_src
** Whitespace
   #+begin_src emacs-lisp :results none
     (setq whitespace-display-mappings
           ;; all numbers are Unicode codepoint in decimal. ⁖ (insert-char 182 1)
           '((tab-mark 9 [183 9] [255 9]))) ; 9 TAB, 9655 WHITE RIGHT-POINTING TRIANGLE 「▷」

     (global-whitespace-mode 1)
     (setq fill-column 120)
     (setq whitespace-line-column 260)

     (setq-default
      tab-width 2
      indent-tabs-mode nil
      fci-rule-column 120)
   #+end_src
** Show time in modeline
   #+begin_src emacs-lisp :results none
     ;;display time in powerline
     (spaceline-define-segment datetime
       (shell-command-to-string "echo -n \"$(date '+%H:%M')\""))
     (spaceline-spacemacs-theme 'datetime)
   #+end_src
** Natural Title bar
#+begin_src emacs-lisp :results none
  (add-to-list 'default-frame-alist
              '(ns-transparent-titlebar . t))
  (add-to-list 'default-frame-alist
              '(ns-appearance . dark))
#+end_src
**Scrolling
#+begin_src emacs-lisp :results none
(setq jit-lock-defer-time 0)
(setq fast-but-imprecise-scrolling t)
#+end_src
** Follow focus
#+begin_src emacs-lisp :results none
  (setq mouse-autoselect-window t)
#+end_src

* Modes
** Org
*** Basic setup
    #+begin_src emacs-lisp :results none
    ;; first day of a week is Monday
    (setq calendar-week-start-day 1)

    #+end_src
**** Keep images not too wide
#+begin_src emacs-lisp :results none
(setq org-image-actual-width 800)
(setq org-download-screenshot-method "screencapture %s")
#+end_src
** LSP
    #+begin_src emacs-lisp :results none
      (setq company-lsp-async t)
      ;; Hack to make sure 'company-lsp is only pushed after company package is loaded
      (use-package company
       :config
       (push 'company-lsp company-backends))
    #+end_src

* Functions
** Utils
#+begin_src emacs-lisp :results none
  (defun zl/insert-today ()
    (interactive)
    (insert (shell-command-to-string "/bin/date \"+%Y-%m-%d\"")))

#+end_src

** External Applications
#+begin_src emacs-lisp :results none
  (defun zl/get-column ()
    (number-to-string (+ (current-column) 1)))

  (defun zl/get-line-number ()
    (number-to-string (line-number-at-pos)))

  (defun zl/open-with-line (app)
    (when buffer-file-name
      (save-buffer)
      (shell-command (concat app " \"" buffer-file-name ":" (zl/get-line-number) "\""))))

  (defun zl/open-with-line-column (app)
    (when buffer-file-name
      (save-buffer)
      (shell-command (concat app " \"" buffer-file-name ":" (zl/get-line-number) ":" (zl/get-column) "\""))))

  (defun zl/open-with-reveal (app)
    (shell-command (concat "osascript -e 'tell application \"" app "\" to activate'")))

  (defun zl/open-with-idea ()
    (interactive)
    (zl/open-with-reveal "IntelliJ IDEA")
    (zl/open-with-line "/usr/local/bin/idea"))

  (defun zl/open-with-vscode ()
    (interactive)
    (zl/open-with-line-column "/usr/local/bin/code --goto"))

#+end_src
